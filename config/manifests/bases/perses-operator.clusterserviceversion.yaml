apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "perses.dev/v1alpha1",
          "kind": "Perses",
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "perses",
              "app.kubernetes.io/instance": "perses-sample",
              "app.kubernetes.io/part-of": "perses-operator"
            },
            "name": "perses-sample",
            "namespace": "perses-dev"
          },
          "spec": {
            "metadata": {
              "labels": {
                "instance": "perses-sample"
              }
            },
            "config": {
              "database": {
                "file": {
                  "folder": "/etc/perses/storage",
                  "extension": "yaml"
                }
              },
              "schemas": {
                "panels_path": "/etc/perses/cue/schemas/panels",
                "queries_path": "/etc/perses/cue/schemas/queries",
                "datasources_path": "/etc/perses/cue/schemas/datasources",
                "variables_path": "/etc/perses/cue/schemas/variables"
              },
              "ephemeral_dashboard": {
                "enable": false,
                "cleanup_interval": "1s"
              }
            },
            "containerPort": 8080
          }
        },
        {
          "apiVersion": "perses.dev/v1alpha1",
          "kind": "PersesDashboard",
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "perses-dashboard",
              "app.kubernetes.io/instance": "perses-dashboard-sample",
              "app.kubernetes.io/part-of": "perses-operator"
            },
            "name": "perses-dashboard-sample",
            "namespace": "perses-dev"
          },
          "spec": {
            "display": {
              "name": "Perses Dashboard Sample",
              "description": "This is a sample dashboard"
            },
            "duration": "5m",
            "datasources": {
              "PrometheusLocal": {
                "default": false,
                "plugin": {
                  "kind": "PrometheusDatasource",
                  "spec": {
                    "proxy": {
                      "kind": "HTTPProxy",
                      "spec": {
                        "url": "http://localhost:9090"
                      }
                    }
                  }
                }
              }
            },
            "variables": [
              {
                "kind": "ListVariable",
                "spec": {
                  "name": "job",
                  "allowMultiple": false,
                  "allowAllValue": false,
                  "plugin": {
                    "kind": "PrometheusLabelValuesVariable",
                    "spec": {
                      "labelName": "job"
                    }
                  }
                }
              },
              {
                "kind": "ListVariable",
                "spec": {
                  "name": "instance",
                  "allowMultiple": false,
                  "allowAllValue": false,
                  "plugin": {
                    "kind": "PrometheusLabelValuesVariable",
                    "spec": {
                      "labelName": "instance",
                      "matchers": [
                        "up{job=~\"$job\"}"
                      ]
                    }
                  }
                }
              },
              {
                "kind": "ListVariable",
                "spec": {
                  "name": "interval",
                  "plugin": {
                    "kind": "StaticListVariable",
                    "spec": {
                      "values": [
                        "1m",
                        "5m"
                      ]
                    }
                  }
                }
              },
              {
                "kind": "TextVariable",
                "spec": {
                  "name": "text",
                  "value": "test",
                  "constant": true
                }
              }
            ],
            "panels": {
              "defaultTimeSeriesChart": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Default Time Series Panel"
                  },
                  "plugin": {
                    "kind": "TimeSeriesChart",
                    "spec": {}
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "up"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "seriesTest": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "~130 Series",
                    "description": "This is a line chart"
                  },
                  "plugin": {
                    "kind": "TimeSeriesChart",
                    "spec": {
                      "yAxis": {
                        "format": {
                          "unit": "bytes",
                          "shortValues": true
                        }
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "rate(caddy_http_response_duration_seconds_sum[$interval])"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "basicEx": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Single Query"
                  },
                  "plugin": {
                    "kind": "TimeSeriesChart",
                    "spec": {
                      "yAxis": {
                        "format": {
                          "unit": "decimal"
                        }
                      },
                      "legend": {
                        "position": "right"
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "seriesNameFormat": "Node memory - {{device}} {{instance}}",
                            "query": "1 - node_filesystem_free_bytes{job='$job',instance=~'$instance',fstype!=\"rootfs\",mountpoint!~\"/(run|var).*\",mountpoint!=\"\"} / node_filesystem_size_bytes{job='$job',instance=~'$instance'}"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "legendEx": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Legend Example"
                  },
                  "plugin": {
                    "kind": "TimeSeriesChart",
                    "spec": {
                      "legend": {
                        "position": "bottom"
                      },
                      "yAxis": {
                        "show": true,
                        "format": {
                          "unit": "bytes",
                          "shortValues": true
                        }
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "seriesNameFormat": "Node memory total",
                            "query": "node_memory_MemTotal_bytes{job='$job',instance=~'$instance'} - node_memory_MemFree_bytes{job='$job',instance=~'$instance'} - node_memory_Buffers_bytes{job='$job',instance=~'$instance'} - node_memory_Cached_bytes{job='$job',instance=~'$instance'}"
                          }
                        }
                      }
                    },
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "seriesNameFormat": "Memory (buffers) - {{instance}}",
                            "query": "node_memory_Buffers_bytes{job='$job',instance=~'$instance'}"
                          }
                        }
                      }
                    },
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "seriesNameFormat": "Cached Bytes",
                            "query": "node_memory_Cached_bytes{job='$job',instance=~'$instance'}"
                          }
                        }
                      }
                    },
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "seriesNameFormat": "MemFree Bytes",
                            "query": "node_memory_MemFree_bytes{job='$job',instance=~'$instance'}"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "testNodeQuery": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Test Query",
                    "description": "Description text"
                  },
                  "plugin": {
                    "kind": "TimeSeriesChart",
                    "spec": {
                      "yAxis": {
                        "format": {
                          "unit": "decimal",
                          "decimalPlaces": 2
                        }
                      },
                      "legend": {
                        "position": "right"
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "node_load15{instance=~\"(demo.do.prometheus.io:9100)\",job='$job'}",
                            "seriesNameFormat": "Test {{job}} {{instance}}"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "testQueryAlt": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Test Query Alt",
                    "description": "Description text"
                  },
                  "plugin": {
                    "kind": "TimeSeriesChart",
                    "spec": {
                      "legend": {
                        "position": "right"
                      },
                      "yAxis": {
                        "format": {
                          "unit": "percent-decimal",
                          "decimalPlaces": 1
                        }
                      },
                      "thresholds": {
                        "steps": [
                          {
                            "value": 0.4,
                            "name": "Alert: Warning condition example"
                          },
                          {
                            "value": 0.75,
                            "name": "Alert: Critical condition example"
                          }
                        ]
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "node_load1{instance=~\"(demo.do.prometheus.io:9100)\",job='$job'}"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "cpuLine": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "CPU - Line (Multi Series)",
                    "description": "This is a line chart test"
                  },
                  "plugin": {
                    "kind": "TimeSeriesChart",
                    "spec": {
                      "yAxis": {
                        "show": false,
                        "label": "CPU Label",
                        "format": {
                          "unit": "percent-decimal",
                          "decimalPlaces": 0
                        }
                      },
                      "legend": {
                        "position": "bottom"
                      },
                      "thresholds": {
                        "steps": [
                          {
                            "value": 0.2
                          },
                          {
                            "value": 0.35
                          }
                        ]
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "seriesNameFormat": "{{mode}} mode - {{job}} {{instance}}",
                            "query": "avg without (cpu)(rate(node_cpu_seconds_total{job='$job',instance=~'$instance',mode!=\"nice\",mode!=\"steal\",mode!=\"irq\"}[$interval]))"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "cpuGauge": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "CPU - Gauge (Multi Series)",
                    "description": "This is a gauge chart test"
                  },
                  "plugin": {
                    "kind": "GaugeChart",
                    "spec": {
                      "calculation": "last-number",
                      "format": {
                        "unit": "percent-decimal"
                      },
                      "thresholds": {
                        "steps": [
                          {
                            "value": 0.2
                          },
                          {
                            "value": 0.35
                          }
                        ]
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "seriesNameFormat": "{{mode}} mode - {{job}} {{instance}}",
                            "query": "avg without (cpu)(rate(node_cpu_seconds_total{job='$job',instance=~'$instance',mode!=\"nice\",mode!=\"steal\",mode!=\"irq\"}[$interval]))"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "statSm": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Stat Sm"
                  },
                  "plugin": {
                    "kind": "StatChart",
                    "spec": {
                      "calculation": "mean",
                      "format": {
                        "unit": "decimal",
                        "decimalPlaces": 1,
                        "shortValues": true
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "node_time_seconds{job='$job',instance=~'$instance'} - node_boot_time_seconds{job='$job',instance=~'$instance'}"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "gaugeRAM": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "RAM Used",
                    "description": "This is a stat chart"
                  },
                  "plugin": {
                    "kind": "GaugeChart",
                    "spec": {
                      "calculation": "last-number",
                      "format": {
                        "unit": "percent"
                      },
                      "thresholds": {
                        "steps": [
                          {
                            "value": 85
                          },
                          {
                            "value": 95
                          }
                        ]
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "100 - ((node_memory_MemAvailable_bytes{job='$job',instance=~'$instance'} * 100) / node_memory_MemTotal_bytes{job='$job',instance=~'$instance'})"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "statRAM": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "RAM Used",
                    "description": "This is a stat chart"
                  },
                  "plugin": {
                    "kind": "StatChart",
                    "spec": {
                      "calculation": "last-number",
                      "format": {
                        "unit": "percent"
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "100 - ((node_memory_MemAvailable_bytes{job='$job',instance=~'$instance'} * 100) / node_memory_MemTotal_bytes{job='$job',instance=~'$instance'})"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "statTotalRAM": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "RAM Total",
                    "description": "This is a stat chart"
                  },
                  "plugin": {
                    "kind": "StatChart",
                    "spec": {
                      "calculation": "last-number",
                      "format": {
                        "unit": "bytes",
                        "decimalPlaces": 1
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "node_memory_MemTotal_bytes{job='$job',instance=~'$instance'}"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "statMd": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Stat Md"
                  },
                  "plugin": {
                    "kind": "StatChart",
                    "spec": {
                      "calculation": "sum",
                      "format": {
                        "unit": "decimal",
                        "decimalPlaces": 2,
                        "shortValues": true
                      },
                      "sparkline": {
                        "color": "#e65013",
                        "width": 1.5
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "avg(node_load15{job='node',instance=~'$instance'}) /  count(count(node_cpu_seconds_total{job='node',instance=~'$instance'}) by (cpu)) * 100"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "statLg": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Stat Lg",
                    "description": "This is a stat chart"
                  },
                  "plugin": {
                    "kind": "StatChart",
                    "spec": {
                      "calculation": "mean",
                      "format": {
                        "unit": "percent"
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "(((count(count(node_cpu_seconds_total{job='$job',instance=~'$instance'}) by (cpu))) - avg(sum by (mode)(rate(node_cpu_seconds_total{mode=\"idle\",job='$job',instance=~'$instance'}[$interval])))) * 100) / count(count(node_cpu_seconds_total{job='$job',instance=~'$instance'}) by (cpu))"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "gaugeEx": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Gauge Ex",
                    "description": "This is a gauge chart"
                  },
                  "plugin": {
                    "kind": "GaugeChart",
                    "spec": {
                      "calculation": "last-number",
                      "format": {
                        "unit": "percent"
                      },
                      "thresholds": {
                        "steps": [
                          {
                            "value": 85
                          },
                          {
                            "value": 95
                          }
                        ]
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "(((count(count(node_cpu_seconds_total{job='$job',instance=~'$instance'}) by (cpu))) - avg(sum by (mode)(rate(node_cpu_seconds_total{mode=\"idle\",job='$job',instance=~'$instance'}[$interval])))) * 100) / count(count(node_cpu_seconds_total{job='$job',instance=~'$instance'}) by (cpu))"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "gaugeAltEx": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Gauge Alt Ex",
                    "description": "GaugeChart description text"
                  },
                  "plugin": {
                    "kind": "GaugeChart",
                    "spec": {
                      "calculation": "last-number",
                      "format": {
                        "unit": "percent-decimal",
                        "decimalPlaces": 1
                      },
                      "thresholds": {
                        "steps": [
                          {
                            "value": 0.5,
                            "name": "Alert: Warning condition example"
                          },
                          {
                            "value": 0.75,
                            "name": "Alert: Critical condition example"
                          }
                        ]
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "node_load15{instance=~'$instance',job='$job'}"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "gaugeFormatTest": {
                "kind": "Panel",
                "spec": {
                  "display": {
                    "name": "Gauge Format Test"
                  },
                  "plugin": {
                    "kind": "GaugeChart",
                    "spec": {
                      "calculation": "last-number",
                      "format": {
                        "unit": "bytes"
                      },
                      "max": 95000000,
                      "thresholds": {
                        "steps": [
                          {
                            "value": 71000000
                          },
                          {
                            "value": 82000000
                          }
                        ]
                      }
                    }
                  },
                  "queries": [
                    {
                      "kind": "TimeSeriesQuery",
                      "spec": {
                        "plugin": {
                          "kind": "PrometheusTimeSeriesQuery",
                          "spec": {
                            "query": "node_time_seconds{job='$job',instance=~'$instance'} - node_boot_time_seconds{job='$job',instance=~'$instance'}"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "layouts": [
              {
                "kind": "Grid",
                "spec": {
                  "display": {
                    "title": "Row 1",
                    "collapse": {
                      "open": true
                    }
                  },
                  "items": [
                    {
                      "x": 0,
                      "y": 0,
                      "width": 2,
                      "height": 3,
                      "content": {
                        "$ref": "#/spec/panels/statRAM"
                      }
                    },
                    {
                      "x": 0,
                      "y": 4,
                      "width": 2,
                      "height": 3,
                      "content": {
                        "$ref": "#/spec/panels/statTotalRAM"
                      }
                    },
                    {
                      "x": 2,
                      "y": 0,
                      "width": 4,
                      "height": 6,
                      "content": {
                        "$ref": "#/spec/panels/statMd"
                      }
                    },
                    {
                      "x": 6,
                      "y": 0,
                      "width": 10,
                      "height": 6,
                      "content": {
                        "$ref": "#/spec/panels/statLg"
                      }
                    },
                    {
                      "x": 16,
                      "y": 0,
                      "width": 4,
                      "height": 6,
                      "content": {
                        "$ref": "#/spec/panels/gaugeFormatTest"
                      }
                    },
                    {
                      "x": 20,
                      "y": 0,
                      "width": 4,
                      "height": 6,
                      "content": {
                        "$ref": "#/spec/panels/gaugeRAM"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "Grid",
                "spec": {
                  "display": {
                    "title": "Row 2",
                    "collapse": {
                      "open": true
                    }
                  },
                  "items": [
                    {
                      "x": 0,
                      "y": 0,
                      "width": 12,
                      "height": 6,
                      "content": {
                        "$ref": "#/spec/panels/legendEx"
                      }
                    },
                    {
                      "x": 12,
                      "y": 0,
                      "width": 12,
                      "height": 6,
                      "content": {
                        "$ref": "#/spec/panels/basicEx"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "Grid",
                "spec": {
                  "display": {
                    "title": "Row 3",
                    "collapse": {
                      "open": false
                    }
                  },
                  "items": [
                    {
                      "x": 0,
                      "y": 0,
                      "width": 24,
                      "height": 6,
                      "content": {
                        "$ref": "#/spec/panels/cpuGauge"
                      }
                    },
                    {
                      "x": 0,
                      "y": 6,
                      "width": 12,
                      "height": 8,
                      "content": {
                        "$ref": "#/spec/panels/cpuLine"
                      }
                    },
                    {
                      "x": 12,
                      "y": 0,
                      "width": 12,
                      "height": 8,
                      "content": {
                        "$ref": "#/spec/panels/defaultTimeSeriesChart"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "apiVersion": "perses.dev/v1alpha1",
          "kind": "PersesDatasource",
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "perses-datasource",
              "app.kubernetes.io/instance": "perses-prometheus-datasource",
              "app.kubernetes.io/part-of": "perses-operator"
            },
            "name": "perses-datasource-sample",
            "namespace": "perses-dev"
          },
          "spec": {
            "display": {
              "name": "Default Datasource"
            },
            "default": true,
            "plugin": {
              "kind": "PrometheusDatasource",
              "spec": {
                "directUrl": "https://prometheus.demo.do.prometheus.io"
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Monitoring
    containerImage: docker.io/persesdev/perses-operator:v0.1.0
    repository: https://github.com/perses/perses-operator
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.arm64: supported
  name: perses-operator.v0.1.0
  namespace: operators
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: A Perses Dashboard
      displayName: Perses Dashboard
      kind: PersesDashboard
      name: persesdashboards.perses.dev
      specDescriptors:
      - displayName: Spec
        path: spec
      statusDescriptors:
      - displayName: Conditions
        path: conditions
      version: v1alpha1
    - description: A Perses Datasource
      displayName: Perses Datasource
      kind: PersesDatasource
      name: persesdatasources.perses.dev
      specDescriptors:
      - displayName: Spec
        path: spec
      statusDescriptors:
      - displayName: Conditions
        path: conditions
      version: v1alpha1
    - description: Perses is the Schema for the perses API
      displayName: Perses
      kind: Perses
      name: perses.perses.dev
      specDescriptors:
      - displayName: Affinity
        path: affinity
      - description: Args extra arguments to pass to perses
        displayName: Args
        path: args
      - description: Perses client configuration
        displayName: Client
        path: client
      - displayName: Config
        path: config
      - displayName: Container Port
        path: containerPort
      - description: Image specifies the container image that should be used for the
          Perses deployment.
        displayName: Image
        path: image
      - displayName: Liveness Probe
        path: livenessProbe
      - displayName: Metadata
        path: metadata
      - displayName: Node Selector
        path: nodeSelector
      - displayName: Readiness Probe
        path: readinessProbe
      - displayName: Replicas
        path: replicas
      - description: service specifies the service configuration for the perses instance
        displayName: Service
        path: service
      - displayName: Annotations
        path: service.annotations
      - displayName: Name
        path: service.name
      - description: tls specifies the tls configuration for the perses instance
        displayName: TLS
        path: tls
      - displayName: Tolerations
        path: tolerations
      statusDescriptors:
      - displayName: Conditions
        path: conditions
      version: v1alpha1
  description: The Perses Operator deploys and manages Perses instances, dashboards
    and datasources.
  displayName: Perses Operator
  icon:
  - base64data: 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
    mediatype: image/jpeg
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - services
          - secrets
          - configmaps
          verbs:
          - get
          - patch
          - update
          - create
          - delete
          - list
          - watch
        - apiGroups:
          - perses.dev
          resources:
          - perses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - perses.dev
          resources:
          - perses/finalizers
          verbs:
          - update
        - apiGroups:
          - perses.dev
          resources:
          - perses/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - perses.dev
          resources:
          - persesdashboards
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - perses.dev
          resources:
          - persesdashboards/finalizers
          verbs:
          - update
        - apiGroups:
          - perses.dev
          resources:
          - persesdashboards/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - perses.dev
          resources:
          - persesdatasources
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - perses.dev
          resources:
          - persesdatasources/finalizers
          verbs:
          - update
        - apiGroups:
          - perses.dev
          resources:
          - persesdatasources/status
          verbs:
          - get
          - patch
          - update
        serviceAccountName: controller-manager
      deployments:
      - name: perses-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --leader-elect
                image: docker.io/persesdev/perses-operator:v0.1.0
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              serviceAccountName: controller-manager
              terminationGracePeriodSeconds: 10
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - monitoring
  - logs
  - traces
  - metrics
  - dashboards
  links:
  - name: Perses Operator
    url: https://perses.dev
  maintainers:
  - email: gbernal@redhat.com
    name: Gabriel Bernal
  - email: augustin.husson@amadeus.com
    name: Augustin Husson
  maturity: alpha
  minKubeVersion: 1.25.0
  provider:
    name: Perses
    url: perses.dev
  version: 0.1.0
